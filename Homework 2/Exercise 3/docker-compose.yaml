x-airflow-common:
  &airflow-common
  image: apache/airflow:2.9.1
  build: 
    context: .
    dockerfile: Dockerfile.airflow
  environment:
    &airflow-env
    AIRFLOW__CORE__EXECUTOR: LocalExecutor
    AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
    AIRFLOW__CELERY__RESULT_BACKEND: db+postgresql://airflow:airflow@postgres/airflow
    AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: 'true'
    _AIRFLOW_DB_MIGRATE: 'true'
    _AIRFLOW_WWW_USER_CREATE: 'true'
    _AIRFLOW_WWW_USER_USERNAME: airflow
    _AIRFLOW_WWW_USER_PASSWORD: airflow

  user: "${AIRFLOW_UID:-50000}:0"
  volumes:
    - ${AIRFLOW_PROJ_DIR:-.}/dags:/opt/airflow/dags
    - ${AIRFLOW_PROJ_DIR:-.}/logs:/opt/airflow/logs
  depends_on:
    &airflow-common-depends-on
    postgres:
        condition: service_healthy

services:
  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - postgres-db-volume:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "airflow"]
      interval: 10s
      retries: 5
      start_period: 5s
    restart: always

  minio:
    image: quay.io/minio/minio:RELEASE.2024-06-04T19-20-08Z
    command: server /data -console-address ":9001"
    expose:
      - "9000"
      - "9001"
    ports:
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    healthcheck:
      test: ["CMD", "mc", "ready", "local"]
      interval: 5s
      timeout: 5s
      retries: 5    
    hostname: minio
    volumes:
      - ./data:/data
    
  selenium:
    image: selenium/standalone-firefox:126.0
    ports:
      - "4444:4444"
    environment:
      - START_XVFB=false
      - SE_NODE_OVERRIDE_MAX_SESSIONS=true
      - SE_NODE_MAX_SESSIONS=5
      - JAVA_OPTS=-XX:ActiveProcessorCount=5
    volumes:
      - /dev/shm:/dev/shm

  airflow-webserver:
    <<: *airflow-common
    command: >
            bash -c "
            airflow db init &&
            airflow webserver"
    ports:
      - 8081:8080
    healthcheck:
      test: ["CMD", "curl","--fail","http://localhost:8080/health"]
      interval: 30s
      timeout: 20s
      retries: 5
      start_period: 30s
    restart: always
    depends_on:
      <<: *airflow-common-depends-on

  airflow-scheduler:
    <<: *airflow-common
    command: "airflow scheduler"
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8974/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    restart: always
    depends_on:
      <<: *airflow-common-depends-on

volumes:
  postgres-db-volume:
